{"version":3,"sources":["Components/ContactList/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","redux/actions.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","redux/reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","connect","state","contacts","items","dispatch","onAddContact","actions","useState","setName","setNumber","handleChange","event","target","value","reset","className","s","formContainer","formTitle","onSubmit","e","preventDefault","some","contact","toLowerCase","alert","form","autoComplete","formLabel","formInput","type","onChange","formButton","ContactListItem","onDeleteContact","contactListItem","onClick","contactListButton","getVisibleContacts","allContacts","filter","normalizedFilter","includes","contactList","map","filterContainer","filterLabel","filterInput","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,QAAU,iCAAiC,kBAAoB,6C,mBCA5ID,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,YAAc,4BAA4B,YAAc,8B,mBCA5HD,EAAOC,QAAU,CAAC,YAAc,mC,iHCajB,GAACC,WAXGC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAkB,CAC9DC,QAAS,CACLC,GAAIC,cACJJ,OACAC,cAOoBI,cAHNN,YAAa,mBAGQO,aAFtBP,YAAa,0B,uBCsElC,IAQeQ,eARS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAMC,SAASC,UAGA,SAAAC,GAAQ,MAAK,CACtCC,aAAc,gBAAEZ,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAR,OAAoBU,EAASE,EAAQf,WAAWE,EAAMC,QAGvDM,EAnFf,YAAkD,IAA3BE,EAA0B,EAA1BA,SAAUG,EAAgB,EAAhBA,aAAgB,EACvBE,mBAAS,IADc,mBACxCd,EADwC,KAClCe,EADkC,OAEnBD,mBAAS,IAFU,mBAExCb,EAFwC,KAEhCe,EAFgC,KAIzCC,EAAe,SAAAC,GACnB,OAAQA,EAAMC,OAAOnB,MACnB,IAAK,OACHe,EAAQG,EAAMC,OAAOC,OACrB,MAEF,IAAK,SACHJ,EAAUE,EAAMC,OAAOC,OACvB,MAEF,QACE,SAmBAC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGZ,OACE,sBAAKM,UAAWC,IAAEC,cAAlB,UACE,oBAAIF,UAAWC,IAAEE,UAAjB,uBACA,uBAAMC,SAvBW,SAAAC,GACnBA,EAAEC,iBACoBnB,EAASoB,MAAK,SAAAC,GAClC,OAAOA,EAAQ9B,KAAK+B,gBAAkB/B,EAAK+B,iBAI3CC,MAAM,GAAD,OAAIhC,EAAJ,8BAIPY,EAAa,CAAEZ,OAAMC,WACrBoB,MAWgCC,UAAWC,IAAEU,KAAMC,aAAa,MAA9D,UACE,wBAAOZ,UAAWC,IAAEY,UAApB,iBAEE,uBACEb,UAAWC,IAAEa,UACbC,KAAK,OACLrC,KAAK,OACLoB,MAAOpB,EACPsC,SAAUrB,OAGd,wBAAOK,UAAWC,IAAEY,UAApB,mBAEE,uBACEb,UAAWC,IAAEa,UACbC,KAAK,SACLrC,KAAK,SACLoB,MAAOnB,EACPqC,SAAUrB,OAGd,wBAAQoB,KAAK,SAASf,UAAWC,IAAEgB,WAAnC,kC,iBC5COC,EAtBS,SAAC,GAA8C,IAA5CV,EAA2C,EAA3CA,QAAS7B,EAAkC,EAAlCA,OAAQwC,EAA0B,EAA1BA,gBAAiBtC,EAAS,EAATA,GAC3D,OACE,qBAAImB,UAAWC,IAAEmB,gBAAjB,UACE,oBAAGpB,UAAWC,IAAEO,QAAhB,UACGA,EADH,KACc7B,KAEd,wBACE0C,QAAS,kBAAMF,EAAgBtC,IAC/BmB,UAAWC,IAAEqB,kBAFf,wB,iBCmBAC,EAAqB,SAACC,EAAaC,GACvC,IAAMC,EAAmBD,EAAOhB,cAEhC,OAAOe,EAAYC,QAAO,qBAAE/C,KACrB+B,cAAckB,SAASD,OAYjBzC,eARS,SAAC,GAAD,QAAEE,SAAWC,EAAb,EAAaA,MAAOqC,EAApB,EAAoBA,OAApB,MAAkC,CACxDtC,SAAUoC,EAAmBnC,EAAOqC,OAGX,SAAApC,GAAQ,MAAK,CACtC8B,gBAAiB,SAAAtC,GAAE,OAAIQ,EAASE,EAAQR,cAAcF,QAGzCI,EArCK,SAAC,GAAmC,IAAjCE,EAAgC,EAAhCA,SAAUgC,EAAsB,EAAtBA,gBAC/B,OACE,oBAAInB,UAAWC,IAAE2B,YAAjB,SACGzC,EAAS0C,KAAI,YAA2B,IAAxBnD,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,GAAIF,EAAa,EAAbA,OACzB,OACE,cAAC,EAAD,CACE6B,QAAS9B,EACTC,OAAQA,EAERwC,gBAAiB,kBAAMA,EAAgBtC,KADlCA,W,iBCmBFI,eARS,SAACC,GAAD,MAAY,CAClCY,MAAOZ,EAAMC,SAASsC,WAGG,SAAApC,GAAQ,MAAK,CACtC2B,SAAU,SAAAX,GAAC,OAAIhB,EAASE,EAAQP,aAAaqB,EAAER,OAAOC,YAGzCb,EA7BA,SAAC,GAAyB,IAAvBa,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SACvB,OACE,qBAAKhB,UAAWC,IAAE6B,gBAAlB,SACE,wBAAO9B,UAAWC,IAAE8B,YAApB,yBAEE,uBACE/B,UAAWC,IAAE+B,YACbjB,KAAK,OACLjB,MAAOA,EACPkB,SAAUA,YCDLiB,I,EAAAA,EAVd,WACC,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,gECLA7C,EAAQ8C,YAAc,IAAD,mBACtB3C,EAAQf,YAAa,SAACU,EAAD,YAASN,SAAT,mBAAmCM,OADlC,cAEtBK,EAAQR,eAAgB,SAACG,EAAD,OAASN,EAAT,EAASA,QAAT,OAAsBM,EAAMuC,QAAO,SAAAjB,GAAO,OAAIA,EAAQ3B,KAAOD,QAF/D,IAKrB6C,EAASS,YAAc,GAAD,eACvB3C,EAAQP,cAAe,SAACmD,EAAD,YAAKvD,YAGlBwD,cAAgB,CAC3BhD,QACAqC,WCAEY,EAAU,sBAAOC,YAAqB,CACxCC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAFhD,CAIZC,MAEEC,EAAwB,CAC1BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGVC,EAAQC,YAAe,CACzBC,QAAS,CACLnE,SAAUoE,YAAeP,EAAuBQ,IAEpDnB,aACAoB,UAAUC,IAKC,GAACN,QAAOO,UAFLC,YAAaR,IC3B/BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWP,EAAMO,UAA7C,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,U,kBCf1B5F,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,UAAY,+BAA+B,KAAO,0BAA0B,UAAY,+BAA+B,UAAY,+BAA+B,WAAa,mC","file":"static/js/main.7f1140b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__3oCsN\",\"contact\":\"ContactListItem_contact__1zAgn\",\"contactListButton\":\"ContactListItem_contactListButton__12kNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2b5Ic\",\"filterLabel\":\"Filter_filterLabel__2RgOB\",\"filterInput\":\"Filter_filterInput__2x8GR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3H5Sw\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction('contacts/add', (name, number) =>({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    }\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default {addContact, deleteContact, changeFilter};","import { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"./../../redux/actions\";\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ contacts, onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    switch (event.target.name) {\r\n      case 'name':\r\n        setName(event.target.value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(event.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const identicalName = contacts.some(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (identicalName) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    onAddContact({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.formContainer}>\r\n      <h2 className={s.formTitle}>Phonebook</h2>\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.formLabel}>\r\n          Name\r\n          <input\r\n            className={s.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n        <label className={s.formLabel}>\r\n          Number\r\n          <input\r\n            className={s.formInput}\r\n            type=\"number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n        <button type=\"submit\" className={s.formButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onAddContact: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContact: ({name, number}) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import propTypes from 'prop-types';\r\n\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, number, onDeleteContact, id }) => {\r\n  return (\r\n    <li className={s.contactListItem}>\r\n      <p className={s.contact}>\r\n        {contact}: {number}\r\n      </p>\r\n      <button\r\n        onClick={() => onDeleteContact(id)}\r\n        className={s.contactListButton}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  id: propTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import propTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"./../../redux/actions\";\r\n\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ name, id, number }) => {\r\n        return (\r\n          <ContactListItem\r\n            contact={name}\r\n            number={number}\r\n            key={id}\r\n            onDeleteContact={() => onDeleteContact(id)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: propTypes.arrayOf(propTypes.shape).isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import propTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"./../../redux/actions\";\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={s.filterContainer}>\r\n      <label className={s.filterLabel}>\r\n        Find contact\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: propTypes.string.isRequired,\r\n  onChange: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.changeFilter(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\n function App() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList/>\n    </div>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, {payload}) => [payload, ...state],\r\n    [actions.deleteContact]: (state, {payload}) => state.filter(contact => contact.id !== payload)\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { \r\n    persistStore, \r\n    persistReducer, \r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER \r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from \"./reducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}), logger];\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './Components/App';\nimport store from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ContactForm_formContainer__1aNfF\",\"formTitle\":\"ContactForm_formTitle__2wU76\",\"form\":\"ContactForm_form__11JIR\",\"formLabel\":\"ContactForm_formLabel__2CrC6\",\"formInput\":\"ContactForm_formInput__dOm70\",\"formButton\":\"ContactForm_formButton__1iX_j\"};"],"sourceRoot":""}